# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.4.0, generator: @autorest/python@5.7.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential
    from azure.core.pipeline.transport import HttpRequest, HttpResponse

from ._configuration import DigitalOceanClientConfiguration
from .operations import ListOperations
from .operations import CreateOperations
from .operations import DestroyOperations
from .operations import GetOperations
from .operations import PostOperations
from . import models


class DigitalOceanClient(object):
    """The DigitalOcean API allows you to manage Droplets and resources within the DigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.

    :ivar list: ListOperations operations
    :vartype list: digitalocean.operations.ListOperations
    :ivar create: CreateOperations operations
    :vartype create: digitalocean.operations.CreateOperations
    :ivar destroy: DestroyOperations operations
    :vartype destroy: digitalocean.operations.DestroyOperations
    :ivar get: GetOperations operations
    :vartype get: digitalocean.operations.GetOperations
    :ivar post: PostOperations operations
    :vartype post: digitalocean.operations.PostOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param droplet_id: A unique identifier for a Droplet instance.
    :type droplet_id: int
    :param per_page: Number of items returned per page.
    :type per_page: int
    :param page: Which 'page' of paginated results to return.
    :type page: int
    :param tag_name: Used to filter Droplets by a specific tag.
    :type tag_name: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        droplet_id,  # type: int
        per_page=20,  # type: Optional[int]
        page=1,  # type: Optional[int]
        tag_name=None,  # type: Optional[str]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://api.digitalocean.com'
        self._config = DigitalOceanClientConfiguration(credential, droplet_id, per_page, page, tag_name, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.list = ListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.create = CreateOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.destroy = DestroyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.get = GetOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.post = PostOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def _send_request(self, http_request, **kwargs):
        # type: (HttpRequest, Any) -> HttpResponse
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.HttpResponse
        """
        path_format_arguments = {
            'droplet_id': self._serialize.url("self._config.droplet_id", self._config.droplet_id, 'int', minimum=1),
        }
        http_request.url = self._client.format_url(http_request.url, **path_format_arguments)
        stream = kwargs.pop("stream", True)
        pipeline_response = self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DigitalOceanClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
